import os
import asyncio
from aiogram import Bot, Dispatcher, types, Router
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command

TOKEN = "6865568473:AAHBq_sgOqJc-11OzvzjcVQE9jh2g5OMubQ"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram Bot API —Ç–æ–∫–µ–Ω
MAC_ADDRESS = "1C-CE-51-45-E3-10"  # MAC-–∞–¥—Ä–µ—Å –Ω–æ—É—Ç–±—É–∫–∞

bot = Bot(token=TOKEN)
dp = Dispatcher()
router = Router()

dp.include_router(router)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ Wake-on-LAN —Å–∏–≥–Ω–∞–ª–∞
def wake_on_lan(mac):
    os.system(f"wakeonlan {mac}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –ü–ö –≤ –≥–∏–±–µ—Ä–Ω–∞—Ü–∏—é
def hibernate_pc():
    os.system("shutdown /h")

# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(Command("start"))
async def start(message: types.Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üíª –í–∫–ª—é—á–∏—Ç—å –Ω–æ—É—Ç–±—É–∫", callback_data="wake")],
        [InlineKeyboardButton(text="üåô –í–≤–µ—Å—Ç–∏ –≤ –≥–∏–±–µ—Ä–Ω–∞—Ü–∏—é", callback_data="hibernate")]
    ])
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@router.callback_query(lambda c: c.data in ["wake", "hibernate"])
async def button_handler(callback_query: types.CallbackQuery):
    if callback_query.data == "wake":
        wake_on_lan(MAC_ADDRESS)
        await callback_query.answer("‚úÖ –°–∏–≥–Ω–∞–ª –Ω–∞ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
    elif callback_query.data == "hibernate":
        hibernate_pc()
        await callback_query.answer("üí§ –ö–æ–º–ø—å—é—Ç–µ—Ä –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –≥–∏–±–µ—Ä–Ω–∞—Ü–∏–∏!")
    await callback_query.message.edit_text("–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")

async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    asyncio.run(main())
