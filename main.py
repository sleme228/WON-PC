import logging
import os
import asyncio
import pyautogui
import cv2
import subprocess
import ctypes
import keyboard
import psutil
import requests
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command

BOT_TOKEN = '6865568473:AAHUtOP1isIJdS__lKxfGZDuwV24x9UpBX8'  # –¢–æ–∫–µ–Ω –±–æ—Ç–∞
CHAT_ID = '5260786785'  # –°—é–¥–∞ —Å–≤–æ–π —á–∞—Ç id
SERVER_URL = "http://YOUR_NGROK_URL"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ –∞–¥—Ä–µ—Å ngrok

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç")],
        [KeyboardButton(text="üé• –§–æ—Ç–æ —Å –≤–µ–±–∫–∏")],
        [KeyboardButton(text="üåê –û—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É")],
        [KeyboardButton(text="üåô –°–ø—è—â–∏–π —Ä–µ–∂–∏–º")],
        [KeyboardButton(text="‚òÄÔ∏è –†–∞–∑–±—É–¥–∏—Ç—å")],
        [KeyboardButton(text="üìä –°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏")]
    ],
    resize_keyboard=True
)

@dp.message(Command("start"))
async def start(message: types.Message):
    if message.from_user.id != int(CHAT_ID):
        return await message.answer("‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
    await message.answer("üíª –£–¥–∞–ª–µ–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ü–ö", reply_markup=keyboard)

@dp.message(lambda message: message.text == "üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç")
async def screenshot(message: types.Message):
    requests.post(f"{SERVER_URL}/screenshot")
    await message.answer("üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–¥–µ–ª–∞–Ω!")

@dp.message(lambda message: message.text == "üé• –§–æ—Ç–æ —Å –≤–µ–±–∫–∏")
async def webcam_photo(message: types.Message):
    requests.post(f"{SERVER_URL}/webcam")
    await message.answer("üì∑ –§–æ—Ç–æ —Å –≤–µ–±–∫–∏ —Å–¥–µ–ª–∞–Ω–æ!")

@dp.message(lambda message: message.text == "üåô –°–ø—è—â–∏–π —Ä–µ–∂–∏–º")
async def sleep_mode(message: types.Message):
    requests.post(f"{SERVER_URL}/sleep")
    await message.answer("üí§ –ü–ö –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –≤ —Ä–µ–∂–∏–º —Å–Ω–∞.")

@dp.message(lambda message: message.text == "‚òÄÔ∏è –†–∞–∑–±—É–¥–∏—Ç—å")
async def wakeup_pc(message: types.Message):
    requests.post(f"{SERVER_URL}/wake")
    await message.answer("‚òÄÔ∏è –ü–ö –ø—Ä–æ–±—É–∂–¥–µ–Ω!")

@dp.message(lambda message: message.text == "üìä –°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏")
async def system_status(message: types.Message):
    response = requests.get(f"{SERVER_URL}/status")
    await message.answer(response.text)

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    asyncio.run(main())
